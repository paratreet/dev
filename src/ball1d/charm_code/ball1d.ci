mainmodule ball {
  readonly CProxy_Main mainProxy;
  readonly CProxy_BallTreePiece tpProxy;

  mainchare Main {
    entry Main(CkArgMsg *m);
    entry [reductiontarget] void done();
  }

  /**
  Chare array representing tree pieces.
  Each tree piece has one unique tree node.
  */ 
  array [1D] BallTreePiece {
    entry BallTreePiece(BallNodeData, BallKey, BallKey);
    entry void startWork();
    /// Response to a consumer requesting a remote tree node
    entry void consumeRemoteNode(const BallNodeData &n, const BallKey &key);
    /// Response to a consumer requesting a remote tree leaf
    entry void consumeRemoteLeaf(const BallLeafData &n, const BallKey &key);
    /// Request appropriate tree piece for a remote node or leaf
    /// Invoked by consumer in a tree piece
    entry void requestRemoteNode(BallKey, int);
  }
};
